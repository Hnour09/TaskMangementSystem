openapi: 3.0.0
info:
  title: Task Mangement System
  description: Documentation for all backend apis
  version: 1.0.0
components:
  securitySchemes:
    jwt:
      type: apiKey
      name: Authorization
      in: header

security:
  - jwt: []

paths:
  /auth/signup:
    post:
      summary: Create new user
      tags:
        - Authentication
      description: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: hadi
                lastName:
                  type: string
                  example: noureddine
                userName:
                  type: string
                  example: hadi.noureddine
                email:
                  type: string
                  example: hadi@gmail.com
                password:
                  type: string
                  example: Password123
                role:
                  type: string
                  example: admin
        responses:
          201:
            description: User added successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                      example: h1g23jhg12g3
  /auth/signin:
    post:
      description: signin user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  example: hadi.noureddine
                password:
                  type: string
                  example: Password123
      responses:
        201:
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: h1g23jhg12g3
  /users/{userId}:
    get:
      summary: Get user by id
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve
      responses:
        200:
          description: User fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    example: hadi
                  lastName:
                    type: string
                    example: noureddine
                  userName:
                    type: string
                    example: hadi.noureddine
                  email:
                    type: string
                    example: hadi@gmail.com
                  password:
                    type: string
                    example: Password123
                  role:
                    type: string
                    example: admin
    delete:
      summary: Delete user by id
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user to delete
      responses:
        200:
          description: User deleted successfully
    put:
      summary: Updated user by id
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: hadi
                lastName:
                  type: string
                  example: noureddine
                userName:
                  type: string
                  example: hadi.noureddine
                email:
                  type: string
                  example: hadi@gmail.com
                password:
                  type: string
                  example: Password123
                role:
                  type: string
                  example: admin
      responses:
        200:
          description: User fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    example: hadi
                  lastName:
                    type: string
                    example: noureddine
                  userName:
                    type: string
                    example: hadi.noureddine
                  email:
                    type: string
                    example: hadi@gmail.com
                  password:
                    type: string
                    example: Password123
                  role:
                    type: string
                    example: admin
  /tasks:
    post:
      description: create Task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: task
                description:
                  type: string
                  example: test
                assignedTo:
                  type: string
                  example: regular
                createdBy:
                  type: string
                  example: admin
      responses:
        201:
          description: Task added successfully
  /tasks/createdBy:
    get:
      summary: Get task created by admin
      tags:
        - Tasks
      responses:
        200:
          description: task fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: task
                  description:
                    type: string
                    example: test
                  assignedTo:
                    type: string
                    example: regular
                  createdBy:
                    type: string
                    example: admin
  /tasks/{taskId}:
    get:
      summary: Get tasks created by taskid  
      tags:
        - Tasks
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the admin to retrieve tasks created by him
      responses:
        200:
          description: tasks fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    example: hadi
                  lastName:
                    type: string
                    example: noureddine
                  userName:
                    type: string
                    example: hadi.noureddine
                  email:
                    type: string
                    example: hadi@gmail.com
                  password:
                    type: string
                    example: Password123
                  role:
                    type: string
                    example: admin
    delete:
      summary: Delete task by id
      tags:
        - Tasks
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the user to delete
      responses:
        200:
          description: task deleted successfully
    put:
      summary: Updated task by id
      tags:
        - Tasks
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the task to retrieve
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: task
                description:
                  type: string
                  example: test
                assignedTo:
                  type: string
                  example: regular
                createdBy:
                  type: string
                  example: admin
      responses:
        200:
          description: task updated successfully
          content:
            application/json:
              schema:
              type: object
              properties:
                name:
                  type: string
                  example: task
                description:
                  type: string
                  example: test
                assignedTo:
                  type: string
                  example: regular
                createdBy:
                  type: string
                  example: admin
